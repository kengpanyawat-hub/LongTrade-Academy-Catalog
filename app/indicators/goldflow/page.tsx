// app/indicators/goldflow/page.tsx
"use client";

import { useEffect, useMemo, useState } from "react";
import Navbar from "@/components/Navbar";
import VideoPlayer from "@/components/VideoPlayer";
import Image from "next/image";
import Link from "next/link";
import { useToast } from "@/components/Toast";

/* ----------------------------- Fallback (local) ---------------------------- */
const REVIEWS: { text: string; name: string }[] = [
  { text: "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏î‡∏¥‡∏° ‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏ó‡∏≥", name: "Somchai T." },
  { text: "‡∏ä‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ TP/SL ‡∏ö‡∏ô‡∏à‡∏≠‡πÄ‡∏•‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡πÇ‡∏ô‡πÄ‡∏≠‡∏á ‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞", name: "Warunee K." },
  { text: "‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≥‡πÑ‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ä‡∏±‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏∏‡∏î‡∏≠‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏•‡∏±‡∏á‡πÄ‡∏•‡πÅ‡∏•‡πâ‡∏ß", name: "Kittipong R." },
  { text: "‡∏≠‡∏¥‡∏ô‡∏î‡∏¥‡πÄ‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏•‡∏≤‡∏î‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏Å", name: "Napas L." },
  { text: "‡∏ú‡∏°‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÄ‡∏ó‡∏£‡∏î‡∏ó‡∏≠‡∏á M15 ‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡πÅ‡∏ú‡∏ô‡∏ä‡∏±‡∏î ‡∏î‡∏π‡∏à‡∏ö‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß", name: "Prasert M." },
  { text: "Backtest ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Å‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏π‡πà‡πÄ‡∏á‡∏¥‡∏ô ‡∏î‡∏µ‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠‡∏ó‡∏≠‡∏á‡∏Å‡∏±‡∏ö GU", name: "Sarayut W." },
  { text: "‡πÄ‡∏™‡πâ‡∏ô MA+‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏•‡πâ‡∏≤‡∏Å‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ‡∏à‡∏∏‡∏î SL ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô", name: "Anucha P." },
  { text: "‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ß‡∏π‡∏ö‡∏ß‡∏≤‡∏ö ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏µ Discipline ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÅ‡∏ú‡∏ô‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏î‡∏µ", name: "Karn N." },
  { text: "‡∏™‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ï‡∏≠‡∏ö‡πÑ‡∏ß ‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡πÉ‡∏à", name: "Sudarat A." },
  { text: "‡∏ú‡∏°‡∏ä‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ TP1/TP2/TP3 ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏ö‡πà‡∏á‡∏õ‡∏¥‡∏î‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ö‡∏±‡∏ô‡πÑ‡∏î‡πÑ‡∏î‡πâ", name: "Praphan C." },
  { text: "‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏•‡∏¢‡∏•‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏ä‡∏≠‡∏ö‡∏°‡∏≤‡∏Å ‡∏Ñ‡∏∏‡πâ‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡πÜ", name: "Siriporn J." },
  { text: "‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏î‡∏π‡πÅ‡∏Ñ‡πà‡∏à‡∏≠‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏à‡∏ö", name: "Apisit D." },
  { text: "‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏≠‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì ‡∏ã‡πâ‡∏≠‡∏°‡∏à‡∏ô‡∏ä‡∏¥‡∏ô ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞", name: "Arisa K." },
  { text: "‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏™‡∏≤‡∏¢‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ñ‡∏∑‡∏≠‡∏¢‡∏≤‡∏ß‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à", name: "Chanon P." },
];

function splitRows<T>(arr: T[]) {
  const a: T[] = [];
  const b: T[] = [];
  arr.forEach((x, i) => ((i % 2 === 0 ? a : b).push(x)));
  return [a, b];
}

/* ------------------------------ XM Modal (local) ------------------------------ */
function XMModal({
  open,
  onClose,
  source,
}: { open: boolean; onClose: () => void; source: string }) {
  const { toast } = useToast();
  const [loading, setLoading] = useState(false);
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [account, setAccount] = useState("");
  const [phone, setPhone] = useState("");

  const endpoint =
    (typeof window !== "undefined" ? (process as any).env?.NEXT_PUBLIC_GS_ENDPOINT : undefined) ||
    process.env.NEXT_PUBLIC_GS_ENDPOINT ||
    "/api/lead";

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (loading) return;
    setLoading(true);

    try {
      const payload = {
        name,
        email,
        account,
        phone,
        page: "/indicators/goldflow",
        source,
        createdAt: new Date().toISOString(),
      };

      const res = await fetch(String(endpoint), {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });
      if (!res.ok) throw new Error("bad_response");

      // fire-and-forget ‡πÅ‡∏à‡πâ‡∏á Telegram ‡∏î‡πâ‡∏ß‡∏¢ (‡∏°‡∏µ API ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
      fetch("/api/notify/telegram", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          text: [
            "üì© <b>XM Lead ‡πÉ‡∏´‡∏°‡πà</b>",
            `‡∏ä‡∏∑‡πà‡∏≠: ${name || "-"}`,
            `‡∏≠‡∏µ‡πÄ‡∏°‡∏•: ${email || "-"}`,
            `‡∏û‡∏≠‡∏£‡πå‡∏ï: ${account || "-"}`,
            `‡πÇ‡∏ó‡∏£: ${phone || "-"}`,
            `‡πÄ‡∏û‡∏à: /indicators/goldflow`,
            `‡∏ó‡∏µ‡πà‡∏°‡∏≤: ${source || "-"}`,
          ].join("\n"),
        }),
      }).catch(() => {});

      toast({
        title: "‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÅ‡∏•‡πâ‡∏ß",
        description: "‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏Ñ‡∏£‡∏±‡∏ö",
        variant: "success",
      });

      setName(""); setEmail(""); setAccount(""); setPhone("");
      onClose();
    } catch {
      toast({
        title: "‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        description: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡∏Å LINE @longtrade",
        variant: "error",
      });
    } finally {
      setLoading(false);
    }
  };

  if (!open) return null;

  return (
    <div className="fixed inset-0 z-[90] grid place-items-center bg-black/60 backdrop-blur-sm p-4" onClick={onClose}>
      <div className="w-full max-w-lg rounded-2xl overflow-hidden relative" onClick={(e) => e.stopPropagation()}>
        <div className="relative p-6 md:p-8 bg-white/[0.04] border border-white/10">
          <div className="pointer-events-none absolute -inset-6 md:-inset-8 -z-10 rounded-3xl bg-[radial-gradient(60%_50%_at_10%_10%,rgba(255,0,0,.18),transparent_70%),radial-gradient(60%_50%_at_90%_90%,rgba(255,70,70,.22),transparent_70%)]" />
          <h3 className="text-xl md:text-2xl font-bold">‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å XM</h3>
          <p className="mt-2 text-white/80">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö</p>

          <form className="mt-4 space-y-3" onSubmit={onSubmit}>
            <input type="text" required placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" className="xm-input" value={name} onChange={(e)=>setName(e.target.value)} />
            <input type="email" required placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" className="xm-input" value={email} onChange={(e)=>setEmail(e.target.value)} />
            <input type="text" inputMode="numeric" placeholder="‡πÄ‡∏•‡∏Ç‡∏û‡∏≠‡∏£‡πå‡∏ï/‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏ó‡∏£‡∏î (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)" className="xm-input" value={account} onChange={(e)=>setAccount(e.target.value)} />
            <input type="tel" placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö" className="xm-input" value={phone} onChange={(e)=>setPhone(e.target.value)} />
            <div className="flex items-center gap-2">
              <button type="submit" disabled={loading} className="btn-red">{loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á..." : "‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"}</button>
              <button type="button" onClick={onClose} className="btn-ghost">‡∏õ‡∏¥‡∏î</button>
            </div>
            <div className="text-xs text-white/60">* ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Å‡∏≥‡∏´‡∏ô‡∏î</div>
          </form>
        </div>
      </div>

      <style>{`
        .xm-input{width:100%; border-radius:.75rem; padding:.9rem 1rem; background:rgba(0,0,0,.45); border:1px solid rgba(255,255,255,.16); color:#fff; outline:none}
        .btn-red{display:inline-flex;align-items:center;gap:.5rem;padding:.75rem 1.25rem;border-radius:9999px;background:#e11d48;color:#fff;font-weight:600;box-shadow:0 8px 28px rgba(244,63,94,.35);transition:background .2s ease}
        .btn-red:hover{ background:#f43f5e; }
        .btn-ghost{display:inline-flex;align-items:center;gap:.5rem;padding:.65rem 1.1rem;border-radius:9999px;background:rgba(255,255,255,.08);color:#fff;border:1px solid rgba(255,255,255,.18)}
      `}</style>
    </div>
  );
}

/* ------------------------------ Page (client) ------------------------------ */

type CmsBlock = {
  title?: string;
  intro?: string;
  images?: string[];
  showcase?: string;
};

const FALLBACK_IMAGES = {
  devices: [
    "/indicator/goldflow/goldflowmocup2.jpg",
    "/indicator/goldflow/goldflowmocup3.jpg",
    "/indicator/goldflow/goldflowmocup1.jpg",
  ],
  functions: [
    "https://ik.imagekit.io/pcqgvgpgi1/FunctionsGF.jpg",
    "https://ik.imagekit.io/pcqgvgpgi1/FunctionsGF%20(2).jpg",
    "https://ik.imagekit.io/pcqgvgpgi1/FunctionsGF%20(1).jpg",
    "https://ik.imagekit.io/pcqgvgpgi1/FunctionsGF%20(3).jpg",
  ],
  performance: [
    "https://ik.imagekit.io/pcqgvgpgi1/Performance%20(1).jpg?updatedAt=1758386579231",
    "https://ik.imagekit.io/pcqgvgpgi1/Performance%20(2).jpg?updatedAt=1758386579247",
    "https://ik.imagekit.io/pcqgvgpgi1/Performance%20(3).jpg?updatedAt=1758386579225",
    "https://ik.imagekit.io/pcqgvgpgi1/Performance%20(4).jpg?updatedAt=1758386579193",
  ],
  showcase: "https://ik.imagekit.io/pcqgvgpgi1/review_gf.jpg?updatedAt=1758450401320",
};

export default function GoldflowPage() {
  const [rowA, rowB] = useMemo(() => splitRows(REVIEWS), []);
  const [openHero, setOpenHero] = useState(false);
  const [openFunc, setOpenFunc] = useState(false);
  const [openPerf, setOpenPerf] = useState(false);
  const [openShowcase, setOpenShowcase] = useState(false);

  // state ‡∏à‡∏≤‡∏Å CMS + fallback
  const [devices, setDevices] = useState<string[]>(FALLBACK_IMAGES.devices);
  const [functionsImgs, setFunctionsImgs] = useState<string[]>(FALLBACK_IMAGES.functions);
  const [performanceImgs, setPerformanceImgs] = useState<string[]>(FALLBACK_IMAGES.performance);
  const [showcaseImg, setShowcaseImg] = useState<string>(FALLBACK_IMAGES.showcase);

  // ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Sanity ‡πÅ‡∏ö‡∏ö public (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ token)
  useEffect(() => {
    const pid = process.env.NEXT_PUBLIC_SANITY_PROJECT_ID;
    const ds = process.env.NEXT_PUBLIC_SANITY_DATASET || "production";
    if (!pid) return; // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ fallback ‡πÑ‡∏õ‡∏Å‡πà‡∏≠‡∏ô

    const qs = encodeURIComponent(`
      {
        "devices": *[_type=="goldflow" && slug.current=="goldflow"][0].devices[]{
          "url": asset->url
        },
        "functions": *[_type=="goldflow" && slug.current=="goldflow"][0].functions[]{
          "url": asset->url
        },
        "performance": *[_type=="goldflow" && slug.current=="goldflow"][0].performance[]{
          "url": asset->url
        },
        "showcase": *[_type=="goldflow" && slug.current=="goldflow"][0].showcase.asset->url
      }
    `);
    const url = `https://${pid}.api.sanity.io/v2023-10-01/data/query/${ds}?query=${qs}`;

    fetch(url)
      .then(r => r.json())
      .then((j) => {
        const r = j?.result || {};
        if (Array.isArray(r.devices)) setDevices(r.devices.map((x: any) => x.url).filter(Boolean));
        if (Array.isArray(r.functions)) setFunctionsImgs(r.functions.map((x: any) => x.url).filter(Boolean));
        if (Array.isArray(r.performance)) setPerformanceImgs(r.performance.map((x: any) => x.url).filter(Boolean));
        if (typeof r.showcase === "string") setShowcaseImg(r.showcase);
      })
      .catch(() => {
        // ‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡πÑ‡∏ß‡πâ ‡πÉ‡∏ä‡πâ fallback ‡πÄ‡∏î‡∏¥‡∏°
      });
  }, []);

  return (
    <>
      <Navbar />

      <main className="container-narrow pt-28 md:pt-32 pb-16 space-y-16">
        {/* HERO */}
        <section className="relative overflow-hidden rounded-3xl p-8 md:p-12 bg-white/[0.04] border border-white/10 backdrop-blur-sm">
          <div className="pointer-events-none absolute -inset-24 bg-[radial-gradient(55%_45%_at_10%_10%,rgba(255,0,0,.16),transparent_65%),radial-gradient(55%_45%_at_90%_90%,rgba(255,70,70,.22),transparent_65%)]" />
          <div className="relative grid grid-cols-1 lg:grid-cols-2 gap-10 items-center">
            <div>
              <h1 className="text-3xl md:text-4xl font-extrabold leading-tight">GOLDFLOW SYSTEM</h1>
              <p className="mt-4 text-white/85">
                ‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Å‡∏£‡∏≤‡∏ü ( Indicators ) ‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏£‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÉ‡∏´‡πâ‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à ‡πÅ‡∏•‡∏∞‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô
              </p>
              <ul className="mt-4 space-y-2 text-white/80 list-disc ml-5">
                <li>‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì BUY / SELL ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå</li>
                <li>‡∏Å‡∏≥‡∏´‡∏ô‡∏î TP / SL ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
                <li>‡∏ä‡∏µ‡πâ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏±‡∏ö‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à</li>
                <li>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏Å‡πá‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ ‡∏°‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡∏Å‡πá‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à</li>
              </ul>

              <div className="mt-6 flex items-center gap-3 flex-wrap">
                <a href="https://lin.ee/KR48M7V" target="_blank" className="btn-line">LINE ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</a>
                <button onClick={() => setOpenHero(true)} className="btn-red">‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å XM</button>
              </div>
            </div>

            <VideoPlayer className="relative" src="https://ik.imagekit.io/pcqgvgpgi1/goldflow.mp4" />
          </div>
        </section>

        {/* ‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô */}
        <section className="grid md:grid-cols-3 gap-6">
          {[
            ["‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", "‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏±‡∏î ‡∏à‡∏±‡∏ö‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡πÑ‡∏°‡πà‡∏û‡∏•‡∏≤‡∏î"],
            ["‡∏Ñ‡∏£‡∏ö‡∏à‡∏ö‡πÉ‡∏ô‡∏ï‡∏±‡∏ß", "‡∏°‡∏µ TP/SL/Entry ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏ú‡∏ô‡πÄ‡∏ó‡∏£‡∏î"],
            ["‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏™‡∏π‡∏á", "‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏™‡πÑ‡∏ï‡∏•‡πå Day / Swing / Position"],
          ].map(([t, d]) => (
            <div key={t} className="glass p-6 rounded-2xl border border-white/10">
              <div className="text-xl font-semibold">{t}</div>
              <div className="opacity-80 mt-1">{d}</div>
            </div>
          ))}
        </section>

        {/* ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ */}
        <section>
          <h2 className="text-2xl md:text-3xl font-bold mb-4">Trade Anywhere, Anytime ( ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå )</h2>
          <div className="grid md:grid-cols-3 gap-6">
            {devices.slice(0, 3).map((src, i) => (
              <div key={i} className="relative aspect-[16/10] rounded-2xl overflow-hidden border border-white/10">
                <Image src={`${src}${src.includes("?") ? "&" : "?"}v=${i}`} alt={`goldflow screenshot ${i + 1}`} fill className="object-cover" />
              </div>
            ))}
          </div>
        </section>

        {/* Functions */}
        <section className="relative overflow-hidden rounded-3xl p-6 md:p-10 bg-white/[0.04] border border-white/10 backdrop-blur-sm">
          <div className="pointer-events-none absolute -inset-24 bg-[radial-gradient(55%_45%_at_10%_10%,rgba(255,0,0,.14),transparent_65%),radial-gradient(55%_45%_at_90%_90%,rgba(255,70,70,.18),transparent_65%)]" />
          <div className="relative">
            <h2 className="text-3xl md:text-4xl font-extrabold">Functions GoldFlow System</h2>
            <p className="mt-2 text-white/85">
              GoldFlow System ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÑ‡∏ß‡πâ‡∏Ñ‡∏£‡∏ö‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏Å‡∏ó‡∏¥‡∏®‡∏ó‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏´‡∏•‡∏±‡∏Å ‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì Buy/Sell ‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î TP/SL ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            </p>
            <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
              {functionsImgs.map((src, i) => (
                <div key={i} className="relative w-full aspect-[16/9]">
                  <Image src={src} alt={`goldflow toolkit ${i + 1}`} fill sizes="(min-width:1024px) 45vw, 95vw" className="rounded-xl border border-white/10 object-cover" />
                </div>
              ))}
            </div>

            <div className="mt-6 flex items-center gap-3">
              <a href="https://lin.ee/KR48M7V" target="_blank" className="btn-line">‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</a>
              <button onClick={() => setOpenFunc(true)} className="btn-red">‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å XM</button>
            </div>
          </div>
        </section>

        {/* Performance */}
        <section className="relative overflow-hidden rounded-3xl p-6 md:p-10 bg-white/[0.04] border border-white/10 backdrop-blur-sm">
          <div className="pointer-events-none absolute -inset-24 bg-[radial-gradient(55%_45%_at_10%_10%,rgba(255,0,0,.12),transparent_65%),radial-gradient(55%_45%_at_90%_90%,rgba(255,70,70,.18),transparent_65%)]" />
          <div className="relative">
            <h2 className="text-3xl md:text-4xl font-extrabold">Performance Overview ( ‡∏û‡∏¥‡∏™‡∏π‡∏à‡∏ô‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á )</h2>
            <p className="mt-2 text-white/85">
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô GoldFlow System ‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á TP/SL ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°
            </p>

            <div className="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
              {performanceImgs.map((src, i) => (
                <div key={i} className="relative w-full aspect-[16/9]">
                  <Image src={src} alt={`goldflow backtest ${i + 1}`} fill sizes="(min-width:1024px) 45vw, 95vw" className="rounded-xl border border-white/10 object-cover" />
                </div>
              ))}
            </div>

            <div className="mt-6 flex items-center gap-3">
              <a href="https://lin.ee/KR48M7V" target="_blank" className="btn-line">‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</a>
              <button onClick={() => setOpenPerf(true)} className="btn-red">‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å XM</button>
            </div>
          </div>
        </section>

        {/* Showcase (1 ‡∏†‡∏≤‡∏û) */}
        <section className="relative overflow-hidden rounded-3xl p-6 md:p-10 bg-white/[0.04] border border-white/10 backdrop-blur-sm">
          <div className="pointer-events-none absolute -inset-24 bg-[radial-gradient(55%_45%_at_10%_10%,rgba(255,0,0,.16),transparent_65%),radial-gradient(55%_45%_at_90%_90%,rgba(255,70,70,.22),transparent_65%)]" />
          <div className="relative">
            <h2 className="text-3xl md:text-4xl font-extrabold">Real Users (‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1,000 ‡πÄ‡∏ó‡∏£‡∏î‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ GoldFlow)</h2>
            <p className="mt-2 text-white/85">‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û</p>

            <div className="mt-6">
              <div className="relative w-full aspect-[16/9] rounded-2xl overflow-hidden border border-white/10">
                <Image src={showcaseImg} alt="GoldFlow Showcase" fill className="object-cover" />
              </div>
            </div>

            <div className="mt-6 flex items-center gap-3">
              <a href="https://lin.ee/KR48M7V" target="_blank" className="btn-line">‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</a>
              <button onClick={() => setOpenShowcase(true)} className="btn-red">‡∏£‡∏±‡∏ö‡∏ü‡∏£‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å XM</button>
            </div>
          </div>
        </section>

        {/* ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô 2 ‡πÅ‡∏ñ‡∏ß */}
        <section id="reviews">
          <h2 className="text-2xl md:text-3xl font-bold mb-4">‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á</h2>
          <div className="space-y-4">
            <MarqueeRow items={rowA} direction="left" duration={45} />
            <MarqueeRow items={rowB} direction="right" duration={55} />
          </div>
        </section>

        {/* CTA */}
        <section className="text-center">
          <h3 className="text-2xl md:text-3xl font-bold">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ GOLDFLOW ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á?</h3>
          <div className="mt-5 flex items-center gap-3 justify-center">
            <a href="https://lin.ee/KR48M7V" target="_blank" className="btn-line">LINE ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠/‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</a>
            <Link href="/indicators" className="glass px-4 py-2 rounded-full border border-white/10">‡∏î‡∏π‡∏≠‡∏¥‡∏ô‡∏î‡∏¥‡πÄ‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Link>
          </div>
        </section>
      </main>

      {/* XM Modals */}
      <XMModal open={openHero} onClose={() => setOpenHero(false)} source="goldflow_hero" />
      <XMModal open={openFunc} onClose={() => setOpenFunc(false)} source="goldflow_functions" />
      <XMModal open={openPerf} onClose={() => setOpenPerf(false)} source="goldflow_performance" />
      <XMModal open={openShowcase} onClose={() => setOpenShowcase(false)} source="goldflow_showcase" />

      {/* styles ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ */}
      <style>{`
        .btn-red{
          display:inline-flex;align-items:center;gap:.5rem;
          padding:.75rem 1.25rem;border-radius:9999px;
          background:#e11d48;color:#fff;font-weight:600;
          box-shadow:0 8px 28px rgba(244,63,94,.35);
          transition:background .2s ease;
        }
        .btn-red:hover{ background:#f43f5e; }
        .btn-ghost{
          display:inline-flex;align-items:center;gap:.5rem;
          padding:.65rem 1.1rem;border-radius:9999px;
          background:rgba(255,255,255,.08);
          color:#fff;border:1px solid rgba(255,255,255,.18);
        }
        .btn-ghost:hover{ background:rgba(255,255,255,.12); }

        .gf-row { overflow: hidden; position: relative;
          -webkit-mask-image: linear-gradient(to right, transparent 0%, #000 8%, #000 92%, transparent 100%);
                  mask-image: linear-gradient(to right, transparent 0%, #000 8%, #000 92%, transparent 100%); }
        .gf-track { display:inline-flex; gap:16px; will-change:transform; animation-timing-function:linear; animation-iteration-count:infinite; white-space:nowrap; }
        .gf-left  { animation-name: gf-marquee-left;  }
        .gf-right { animation-name: gf-marquee-right; }
        @keyframes gf-marquee-left { from { transform: translateX(0); } to { transform: translateX(-50%);} }
        @keyframes gf-marquee-right{ from { transform: translateX(-50%);} to { transform: translateX(0);} }
        .gf-card { min-width:300px; max-width:540px; }
        @media (min-width:768px){ .gf-card{ min-width:420px; } }
      `}</style>
    </>
  );
}

function MarqueeRow({
  items,
  direction = "left",
  duration = 50,
}: {
  items: { text: string; name: string }[];
  direction?: "left" | "right";
  duration?: number;
}) {
  const loop = [...items, ...items];
  return (
    <div className="gf-row">
      <div className={`gf-track ${direction === "left" ? "gf-left" : "gf-right"}`} style={{ animationDuration: `${duration}s` }}>
        {loop.map((r, i) => (
          <div key={`${r.name}-${i}`} className="gf-card glass p-6 rounded-2xl border border-white/10">
            <div className="opacity-90">{r.text}</div>
            <div className="mt-3 text-white/70 text-sm">‚Äî {r.name}</div>
          </div>
        ))}
      </div>
    </div>
  );
}
